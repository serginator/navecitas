{"version":3,"file":"main.js","sources":["main.js","almond.js"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n * @return {[type]} [description]\n */\nwindow.requestAnimFrame = (function() {\n    return window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function(/*function */callback, /* DOMElement*/element) {\n            window.setTimeout(callback, 1000 / 60);\n        };\n})();\n\nfunction BufferLoader(context, urlList, callback) {\n    this.context = context;\n    this.urlList = urlList;\n    this.onload = callback;\n    this.bufferList = [];\n    this.loadCount = 0;\n\n    this.loadBuffer = function(url, index) {\n        // Load buffer asynchronously\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n\n        var loader = this;\n\n        request.onload = function() {\n            // Asynchronously decode the audio file data in request.response\n            loader.context.decodeAudioData(\n            request.response,\n            function(buffer) {\n                if (!buffer) {\n                    alert('error decoding file data: ' + url);\n                    return;\n                }\n                loader.bufferList[index] = buffer;\n                if (++loader.loadCount === loader.urlList.length) {\n                    loader.onload(loader.bufferList);\n                }\n            },\n            function(error) {\n                console.error('decodeAudioData error', error);\n            });\n        };\n        request.onerror = function() {\n            alert('BufferLoader: XHR error');\n        };\n        request.send();\n    };\n\n    this.load = function() {\n        for (var i = 0; i < this.urlList.length; ++i) {\n            this.loadBuffer(this.urlList[i], i);\n        }\n    };\n}\n\n\n/**\n * Method to remove an item from an array\n * @param  {[type]} array\n * @param  {[type]} from\n * @return {[type]}\n */\nvar arrayRemove = function(array, from) {\n    var rest = array.slice((from) + 1 || array.length);\n    array.length = from < 0 ? array.length + from : from;\n    return array.push.apply(array, rest);\n};\n\nvar game = (function() {\n\n    // Global vars\n    var canvas, ctx, buffer, bufferctx,\n        background, background2, background3, background4,\n        backgroundMirror, background2Mirror, background3Mirror, background4Mirror,\n        foreground, foreground2, foreground3, foreground4,\n        starfield, starfield2, starfield3, starfield4, starfield5, starfield6,\n        particleManager, fireParticle,\n        bgSpeed = 2,\n        to_radians = Math.PI / 180,\n        shots = [],      //Array of shots\n        keyPressed = {},\n        keyMap = {\n            left: 37,\n            up: 38,\n            right: 39,\n            down: 40,\n            rotateLeft: 65, // A\n            rotateRight: 68, // D\n            fireMoreSpread: 87, // W\n            fireLessSpread: 83, // S\n            fire: 88,     // X\n            fire2: 67,    // C\n            increaseBullets: 73, // I\n            decreaseBullets: 79, // O\n            focus: 90, // Z\n            speedUp: 34,  // Av Pag\n            speedDown: 33, // Re Pag\n            toggleMusic: 84, // T, toggle music\n            spaceBar: 32, // Space, bombs\n            mute: 77, // m key\n            buggerMode: 49, // 1 key\n            bossMode: 50, // 2 key\n            clearEnemies: 48 // 0 key\n        },\n        nextShootTime = 0,\n        shotDelay = 100,\n        currentTime = 0,\n        player, boss,\n        buggers = [],\n        buggersCount,\n        imagesList = [\n            'images/fire.png',\n            'images/background-1.jpg',\n            'images/background-2.jpg',\n            'images/background-3.jpg',\n            'images/background-4.jpg',\n            'images/background-4-mirror.jpg',\n            'images/background-3-mirror.jpg',\n            'images/background-2-mirror.jpg',\n            'images/background-1-mirror.jpg',\n            'images/foreground-1.png',\n            'images/foreground-2.png',\n            'images/foreground-3.png',\n            'images/foreground-4.png',\n            'images/starfield-2.png',\n            'images/ship.png',\n            'images/ship-focused.png',\n            'images/shot.png',\n            'images/boss.png',\n            'images/bugger.png'\n        ],\n        images = [],\n        IMG = {\n            fire: 0,\n            background1: 1,\n            background2: 2,\n            background3: 3,\n            background4: 4,\n            background4m: 5,\n            background3m: 6,\n            background2m: 7,\n            background1m: 8,\n            foreground1: 9,\n            foreground2: 10,\n            foreground3: 11,\n            foreground4: 12,\n            starfield: 13,\n            ship: 14,\n            shipFocused: 15,\n            shot: 16,\n            boss: 17,\n            bugger: 18\n        },\n        audioCtx, audioBuffer, audioMusic, currentAudioMusic, gainNode,\n        changingMusic = false,\n        musicList = [\n            'music/16-bits-TFIV-Stand-Up-Against-Myself.ogg',\n            'music/32-bits-TFV-Steel-Of-Destiny.ogg',\n            'music/128-bits-Ikaruga-Ideal.ogg'\n        ],\n        fxList = [\n            'music/FX/bomb.ogg',\n            'music/FX/shot.ogg',\n            'music/FX/explosion.ogg'\n        ],\n        FX = {\n            bomb: 0,\n            shot: 1,\n            explosion: 2\n        },\n        score = 0,\n        buggerMode = false,\n        bossMode = false,\n        allowMusicChange = false,\n        touch = false;\n\n    function preloadImages() {\n        var loaded = 0,\n            total = imagesList.length;\n        for (var i = 0; i < total; i++) {\n            var img = new Image();\n            img.src = imagesList[i];\n            img.onload = function() {\n                loaded++;\n                if (loaded === total) {\n                    preloadMusic();\n                }\n            };\n            images.push(img);\n        }\n    }\n\n    function preloadMusic() {\n        var loaded = 0,\n            fxAndMusic = musicList.concat(fxList),\n            total = fxAndMusic.length;\n        for (var i = 0; i < total; i++) {\n            var audio = new Audio();\n            audio.addEventListener('canplaythrough', function() {\n                loaded++;\n                if (loaded === total) {\n                    init(true);\n                }\n            }, false);\n            audio.src = fxAndMusic[i];\n        }\n    }\n\n    /**\n     * Main game loop\n     * @return {[type]}\n     */\n    function loop() {\n        update();\n        draw();\n    }\n\n    /**\n     * Extend an object\n     * @param  {[type]} destination\n     * @param  {[type]} source\n     * @return {[type]}\n     */\n    function extend(destination, source) {\n        for (var property in source) {\n            destination[property] = source[property];\n        }\n        return destination;\n    }\n\n    /**\n     * Method to resize the canvas to a percentage of the full screen\n     * @return {[type]}\n     */\n    function resizeCanvas() {\n        canvas.width = window.innerWidth * 0.85; // 85%\n        canvas.height = window.innerHeight * 0.85;\n        buffer.width = canvas.width;\n        buffer.height = canvas.height;\n        loop();\n    }\n\n    /**\n     * Init vars, load assets and start the main animation.\n     * @param {Boolean} ready If true, launch the app, if false, preload images\n     * @return {[type]}\n     */\n    function init(ready) {\n        if (!ready) {\n            canvas = document.getElementById('canvas');\n            ctx = canvas.getContext('2d');\n\n            // Buffering\n            buffer = document.createElement('canvas');\n            bufferctx = buffer.getContext('2d');\n\n            ctx.fillStyle = '#fff';\n            ctx.font = 'italic 25px arial';\n            ctx.textBaseline = 'bottom';\n            ctx.fillText('Loading...', buffer.width - 200, buffer.height - 50);\n\n            preloadImages();\n        } else {\n            // Adjusting buggers\n            buggersCount = (canvas.height / 40) * 15;\n\n            // Particle System\n            fireParticle = images[IMG.fire];\n            particleManager = new ParticleManager(bufferctx);\n\n            window.AudioContext = window.AudioContext || window.webkitAudioContext;\n            audioCtx = new window.AudioContext();\n\n            // Audio stuff\n            audioBuffer = new window.BufferLoader(audioCtx, musicList.concat(fxList), createAudioSources);\n            audioBuffer.load();\n\n            // Load resources\n            // Background pattern\n            background = new Image();\n            background.src = 'images/background-1.jpg';\n            background.posX = 0;\n\n            background2 = new Image();\n            background2.src = 'images/background-2.jpg';\n            background2.posX = background.width;\n\n            background3 = new Image();\n            background3.src = 'images/background-3.jpg';\n            background3.posX = background.width * 2;\n\n            background4 = new Image();\n            background4.src = 'images/background-4.jpg';\n            background4.posX = background.width * 3;\n\n            backgroundMirror = new Image();\n            backgroundMirror.src = 'images/background-4-mirror.jpg';\n            backgroundMirror.posX = background.width * 4;\n\n            background2Mirror = new Image();\n            background2Mirror.src = 'images/background-3-mirror.jpg';\n            background2Mirror.posX = background.width * 5;\n\n            background3Mirror = new Image();\n            background3Mirror.src = 'images/background-2-mirror.jpg';\n            background3Mirror.posX = background.width * 6;\n\n            background4Mirror = new Image();\n            background4Mirror.src = 'images/background-1-mirror.jpg';\n            background4Mirror.posX = 0;\n\n            foreground = new Image();\n            foreground.src = 'images/foreground-1.png';\n            foreground.posX = 0;\n\n            foreground2 = new Image();\n            foreground2.src = 'images/foreground-2.png';\n            foreground2.posX = foreground.width;\n\n            foreground3 = new Image();\n            foreground3.src = 'images/foreground-3.png';\n            foreground3.posX = foreground.width * 2;\n\n            foreground4 = new Image();\n            foreground4.src = 'images/foreground-4.png';\n            foreground4.posX = foreground.width * 3;\n\n            starfield = new Image();\n            starfield.src = 'images/starfield-2.png';\n            starfield.posX = 0;\n\n            starfield2 = new Image();\n            starfield2.src = 'images/starfield-2.png';\n            starfield2.posX = starfield.width;\n\n            starfield3 = new Image();\n            starfield3.src = 'images/starfield-2.png';\n            starfield3.posX = starfield.width * 2;\n\n            starfield4 = new Image();\n            starfield4.src = 'images/starfield-2.png';\n            starfield4.posX = starfield.width * 3;\n\n            starfield5 = new Image();\n            starfield5.src = 'images/starfield-2.png';\n            starfield5.posX = starfield.width * 4;\n\n            starfield6 = new Image();\n            starfield6.src = 'images/starfield-2.png';\n            starfield6.posX = starfield.width * 5;\n\n            currentAudioMusic = 0;\n\n            player = new Player();\n\n            // Attach keyboard control\n            addListener(document, 'keydown', keyDown);\n            addListener(document, 'keyup', keyUp);\n\n            document.addEventListener('touchstart', function(e) {\n                player.moveTo(e.touches[0]);\n                touch = true;\n                player.firing = true;\n                e.preventDefault();\n            });\n            document.addEventListener('touchmove', function(e) {\n                player.moveTo(e.touches[0]);\n                e.preventDefault();\n            });\n            document.addEventListener('touchend', function(e) {\n                player.moveTo(e.touches[0]);\n                touch = false;\n                player.firing = false;\n                e.preventDefault();\n            });\n\n            // Resizing Event\n            addListener(window, 'resize', resizeCanvas);\n\n            // Gameloop\n            var anim = function() {\n                resizeCanvas();\n                window.requestAnimFrame(anim);\n            };\n            anim();\n        }\n    }\n\n    /**\n     * Method to create the audio sources and connect the gain to them\n     * @param  {[type]} list\n     * @return {[type]}\n     */\n    function createAudioSources(list) {\n        var i, n;\n        audioMusic = [];\n        gainNode = audioCtx.createGain();\n        for (i = 0, n = musicList.length; i < n; i++) {\n            setAudioSource(i);\n        }\n        for (i = musicList.length, n = i + fxList.length; i < n; i++) {\n            setAudioSource(i);\n            audioMusic[i].loop = false;\n        }\n        gainNode.connect(audioCtx.destination);\n        audioMusic[0].start(0);\n        allowMusicChange = true;\n    }\n\n    /**\n     * Set an audio source\n     * @param {[type]} index\n     */\n    function setAudioSource(index) {\n        audioMusic[index] = audioCtx.createBufferSource();\n        audioMusic[index].buffer = audioBuffer.bufferList[index];\n        audioMusic[index].connect(gainNode);\n        audioMusic[index].loop = true;\n    }\n\n    /**\n     * Method to change between music files\n     * @return {[type]}\n     */\n    function changeAudioMusic() {\n        audioMusic[currentAudioMusic].stop(0);\n        currentAudioMusic++;\n        if (currentAudioMusic > musicList.length - 1) {\n            currentAudioMusic -= musicList.length;\n        }\n        setAudioSource(currentAudioMusic);\n        audioMusic[currentAudioMusic].start(0);\n    }\n\n    /**\n     * Method to play a FX\n     * @param  {[type]} index\n     * @return {[type]}\n     */\n    function playFx(index) {\n        var audio = audioMusic[index];\n        if (audio.playing) {\n            audio.stop(0);\n        }\n        setAudioSource(index);\n        audio.loop = false;\n        audio.start(0);\n        audio.playing = true;\n\n    }\n\n    /**\n     * Method to toggle mute\n     * @return {[type]}\n     */\n    function toggleMute() {\n        if (gainNode.gain.value === 1) {\n            gainNode.gain.value = 0;\n        } else {\n            gainNode.gain.value = 1;\n        }\n    }\n\n    /**\n     * Player object\n     * @param {[type]} player\n     */\n    function Player(player) {\n        player = images[IMG.ship];\n        player.posX = player.width; // Dedault X position\n        player.posY = (background.height / 2) - (player.height / 2); // Def Y pos\n        player.centerX = player.posX + (player.width / 2);\n        player.centerY = player.posY + (player.height / 2);\n        player.rotate = 0;\n        player.firing = false;\n        player.bombing = false;\n        player.cooldown = 0;\n\n        /**\n         * Weapon of the player\n         * @type {Object}\n         */\n        player.weapon = {\n           count: 1,\n           chaos: 0,\n           spreadBase: 9,\n           spacing: 0,\n           speed: 30,\n           color: '#00ffff',\n           shape: 0,\n           firerate: 20\n        };\n        player.weapon.spread = Math.PI / player.weapon.spreadBase;\n\n        player.moveTo = function(data) {\n            var x = data.pageX - player.width / 2,\n                y = data.pageY - player.height / 2;\n            if (x > 0 && x < canvas.width && y > 0 && y < canvas.height) {\n                player.posX = x;\n                player.posY = y;\n            }\n        };\n\n        /**\n         * Method to sread bullets\n         * @return {[type]}\n         */\n        player.increaseWeaponSpread = function() {\n            if (player.weapon.spreadBase < 20) {\n                player.weapon.spreadBase += 0.2;\n                player.weapon.spread = Math.PI / player.weapon.spreadBase;\n            }\n        };\n\n        /**\n         * Method to decrease bullets' spread\n         * @return {[type]}\n         */\n        player.decreaseWeaponSpread = function() {\n            if (player.weapon.spreadBase > 2) {\n                player.weapon.spreadBase -= 0.2;\n                player.weapon.spread = Math.PI / player.weapon.spreadBase;\n            }\n        };\n\n        /**\n         * Increase power fire\n         * @return {[type]}\n         */\n        player.increaseBullets = function() {\n            if (player.weapon.count < 20) {\n                player.weapon.count += 1;\n            }\n        };\n\n        /**\n         * Decrease power fire\n         * @return {[type]}\n         */\n        player.decreaseBullets = function() {\n            if (player.weapon.count >= 2) {\n                player.weapon.count -= 1;\n            }\n        };\n\n        /**\n         * Check for fire\n         * @return {[type]}\n         */\n        player.checkForFire = function() {\n            player.cooldown -= 60; // FPS\n            if (player.firing) {\n                if (player.cooldown <= 0) {\n                    player.fire();\n                    player.cooldown = player.weapon.firerate;\n                }\n            }\n        };\n\n        /**\n         * Method to calculate position of the shoots and add more of them.\n         * It also handles the sound of the shoot\n         * @return {[type]}\n         */\n        player.fire = function() {\n            var spreadStart = 0,\n                spacingStart = 0,\n                spreadStep = 0,\n                spacingStep = 0;\n            if (player.weapon.count > 1) {\n                spreadStart = -player.weapon.spread / 2;\n                spacingStart = player.weapon.spacing / 2;\n                spreadStep = player.weapon.spread / (player.weapon.count - 1);\n                spacingStep = player.weapon.spacing / (player.weapon.count - 1);\n            }\n\n            // Holy grial of the rotation\n            var rotation = player.rotate * to_radians,\n                gunX = player.posX + Math.cos(rotation) * 34 - Math.sin(rotation) * 5,\n                gunY = player.posY + Math.sin(rotation) * 34 + Math.cos(rotation) * 5,\n                shot;\n\n            for (var i = 0, n = this.weapon.count; i < n; i++) {\n                var spacingOffsetX = Math.cos(rotation - Math.PI / 2) * (spacingStart - i * spacingStep),\n                    spacingOffsetY = Math.sin(rotation - Math.PI / 2) * (spacingStart - i * spacingStep);\n\n                shot = new Shot({\n                    shot: this,\n                    direction: rotation + spreadStart + i * spreadStep,\n                    shotX: gunX + spacingOffsetX + Math.random() * player.weapon.chaos - player.weapon.chaos / 2,\n                    shotY: gunY + spacingOffsetY + Math.random() * player.weapon.chaos - player.weapon.chaos / 2,\n                    speed: player.weapon.speed\n                });\n                shot.add();\n            }\n            if (allowMusicChange) {\n                playFx(musicList.length + FX.shot);\n            }\n        };\n\n        /**\n         * Decrease speed of the ship\n         * @return {[type]}\n         */\n        player.focusOn = function() {\n            player.speed = 3;\n            player.src = 'images/ship-focused.png';\n        };\n\n        /**\n         * Restore normal speed of the ship\n         * @return {[type]}\n         */\n        player.focusOff = function() {\n            player.speed = 7;\n            player.src = 'images/ship.png';\n        };\n\n        return player;\n    }\n\n    /**\n     * Bullet object\n     * @param {[type]} args\n     */\n    function Shot(args) {\n        args.shot = new Image();\n        args.shot.src = 'images/shot.png'; //12x12\n        args.shot.posX = args.shotX;\n        args.shot.posY = args.shotY;\n        args.shot.direction = args.direction || 0;\n        args.shot.speed = args.speed || 256;\n        args.shot.color = args.color || 'F00';\n\n        args.shot.add = function() {\n            shots.push(args.shot);\n        };\n\n        args.shot.del = function(id) {\n            arrayRemove(shots, id);\n        };\n\n        return args.shot;\n    }\n\n    /**\n     * Boss example\n     * @param {[type]} boss\n     * @param {[type]} _x\n     * @param {[type]} _y\n     */\n    function Boss(boss, _x, _y) {\n        boss = images[IMG.boss]; //128x128\n        boss.posX = canvas.width - boss.width;\n        boss.posY = canvas.height / 2 - boss.width / 2;\n        boss.life = 700; //700 hits\n\n        /**\n         * Method to destroy the boss and generate an explosion\n         * @return {[type]}\n         */\n        boss.kill = function() {\n            particleManager.createExplosion(boss.posX, boss.posY, 130, 15, 70, 3, 0);\n            score += 1000;\n            bossMode = false;\n        };\n        return boss;\n    }\n\n    /**\n     * Enemies object\n     * @param {[type]} bugger\n     */\n    function Bugger(bugger) {\n        bugger = new Image();\n        bugger.src = 'images/bugger.png';\n        bugger.initPos = (Math.random() * (background.height - 120)) + 60;\n        bugger.posX = canvas.width + (Math.random() * (canvas.width / 2)) + 1;\n        bugger.posY = bugger.initPos;\n        bugger.speed = 5;\n\n        /**\n         * Method to update the position of the bugger\n         * @return {[type]}\n         */\n        bugger.update = function() {\n            bugger.posX -= bugger.speed;\n            bugger.posY -= 3 * Math.sin(bugger.initPos * Math.PI / 64);\n            bugger.initPos++;\n\n            if (bugger.posY < 0) { bugger.posY = 0; }\n            if (bugger.posY > background.height - 100) { bugger.posY = background.height - 100; }\n        };\n        bugger.add = function() {\n            buggers.push(bugger);\n        };\n        bugger.del = function(id) {\n            arrayRemove(buggers, id);\n        };\n        return bugger;\n    }\n\n    /**\n     * Method to check collisions between two objects and launch a callback\n     * if the collision is done\n     * @param  {[type]}   a\n     * @param  {[type]}   b\n     * @param  {Function} callback\n     * @return {[type]}\n     */\n    function checkCollision(a, b, callback) {\n        var bX = b.posX, bY = b.posY, bW = b.width, bH = b.height;\n        if (b.fire) {\n            bX += 5;\n            bY -= 15;\n            bH = 15;\n            bW = 20;\n        }\n        if (a.posX >= bX && a.posX <= (bX + bW)) {\n            if ((a.posY >= bY && a.posY <= (bY + bH)) ||\n                (a.posY <= bY && bY < (a.posY + a.width))) {\n                callback();\n                makeExplosion(a.posX, a.posY);\n                if (allowMusicChange) {\n                    playFx(musicList.length + FX.explosion);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Check bullet colisions\n     * @param  {[type]} shot\n     * @return {[type]}\n     */\n    function checkCollisionsShot(shot) {\n        return checkCollision(shot, boss, function() {\n            if (boss.life > 1) {\n                boss.life--;\n            } else {\n                boss.kill();\n            }\n            shot.del(parseInt(shot.id, 10));\n            score += 10;\n        });\n    }\n\n    /**\n     * Check enemies collisions\n     * @param  {[type]} bugger\n     * @return {[type]}\n     */\n    function checkCollisionsBugger(bugger) {\n        var ret;\n        shots.forEach(function(shot, index) {\n            ret = checkCollision(shot, bugger, function() {\n                shot.del(parseInt(shot.id, 10));\n                    bugger.del(parseInt(bugger.id, 10));\n                    score += 50;\n            });\n            if (ret) {\n                return true;\n            }\n        });\n        return checkCollision(bugger, player, function() {\n            // player.lifes--\n            score -= 20;\n            bugger.del(parseInt(bugger.id, 10));\n        });\n    }\n\n    /**\n     * Scroll Background\n     * @param {obj} layers An oject with the backgounds to slide and speed.\n     */\n    var scrollBackground = function(layersGroup) {\n        if (! Array.isArray(layersGroup)) {\n            layersGroup = [layersGroup];\n        }\n\n        layersGroup.forEach(function(layers) {\n            var settings = {\n                source: [],\n                orientation: 'horizontal',\n                moveTo: 'right'\n            },\n            index, axis, magnitude, displace, calculateNewMove, newPosition, repeatFactor;\n\n            if (layers.mirrorAtEnd) {\n                var mirror = background4;\n\n                layers.source.push(mirror);\n            }\n\n            index = layers.source.length;\n            extend(settings, layers);\n\n            settings.speed = layers.speed ? bgSpeed * layers.speed : bgSpeed;\n\n            while (index--) {\n                axis = (settings.orientation === 'horizontal') ? 'X' : 'Y';\n                magnitude = (settings.orientation === 'horizontal') ? 'width' : 'height';\n                displace = (settings.moveTo === 'down' || settings.moveTo === 'right') ? 'negative' : 'positive';\n                repeatFactor = canvas.width / settings.source[index][magnitude];\n\n                if (displace === 'positive') {\n                    settings.source[index]['pos' + axis] -= settings.speed;\n                } else {\n                    settings.source[index]['pos' + axis] += settings.speed;\n                }\n\n                calculateNewMove = (displace === 'positive') ?\n                    settings.source[index]['pos' + axis] + settings.source[index][magnitude] > 0 :\n                    settings.source[index]['pos' + axis] < settings.source[index][magnitude];\n\n                if (calculateNewMove) {\n                    newPosition = settings.source[index]['pos' + axis];\n                    bufferctx.drawImage(settings.source[index], (axis === 'X') ? newPosition : 0, (axis === 'Y') ? newPosition : 0);\n                } else {\n                    newPosition = settings.source[index][magnitude] * (layers.source.length - (layers.source.length % 4 ? 1 : 2));\n                    settings.source[index]['pos' + axis] = (displace === 'positive') ? newPosition : Math.abs(newPosition) * -1;\n                }\n            }\n        });\n    };\n\n    /**\n     * Method to render and rotate an image\n     * @param  {[type]} image\n     * @param  {[type]} ctxTmp\n     * @param  {[type]} x\n     * @param  {[type]} y\n     * @param  {[type]} angle\n     * @return {[type]}\n     */\n    function renderImage(image, ctxTmp, x, y, angle) {\n        ctxTmp.save();\n        ctxTmp.translate(x, y);\n        ctxTmp.rotate(angle * to_radians);\n        ctxTmp.drawImage(image, - (image.width / 2), - (image.height / 2));\n        ctxTmp.restore();\n    }\n\n    /**\n     * Rotate player to the left\n     * @return {[type]}\n     */\n    function rotateLeft() {\n        player.rotate -= 5;\n        if (player.rotate <= -360) {\n            player.rotate = 0;\n        }\n    }\n\n    /**\n     * Rotate player to the right\n     * @return {[type]}\n     */\n    function rotateRight() {\n        player.rotate += 5;\n        if (player.rotate >= 360) {\n            player.rotate = 0;\n        }\n    }\n\n    /**\n     * Launch several actions depending on the key pressed\n     * @return {[type]}\n     */\n    function playerAction() {\n        if (keyPressed.focus) {\n            player.focusOn();\n        } else {\n            player.focusOff();\n        }\n\n        if (keyPressed.spaceBar) {\n            return false;\n        }\n\n        if (keyPressed.up && player.posY > (player.height / 2)) {\n            player.posY -= player.speed;\n        }\n        if (keyPressed.down && player.posY < (canvas.height - player.height / 2) &&\n                player.posY < background.height) {\n            player.posY += player.speed;\n        }\n        if (keyPressed.left && player.posX > (player.width / 2)) {\n            player.posX -= player.speed;\n        }\n        if (keyPressed.right && player.posX < (canvas.width - player.width / 2)) {\n            player.posX += player.speed;\n        }\n        if (keyPressed.rotateLeft) {\n            rotateLeft();\n        }\n        if (keyPressed.rotateRight) {\n            rotateRight();\n        }\n        if (keyPressed.fireMoreSpread) {\n            player.increaseWeaponSpread();\n        }\n        if (keyPressed.fireLessSpread) {\n            player.decreaseWeaponSpread();\n        }\n        if (keyPressed.increaseBullets) {\n            player.increaseBullets();\n        }\n        if (keyPressed.decreaseBullets) {\n            player.decreaseBullets();\n        }\n        if (keyPressed.fire) {\n            player.firing = true;\n            touch = false;\n        } else if (keyPressed.fire === false && !touch) {\n            player.firing = false;\n        }\n        if (keyPressed.fire2) {\n            bomb();\n        }\n        if (keyPressed.speedUp && bgSpeed < 10) {\n            bgSpeed += 1;\n            console.log(bgSpeed);\n        }\n        if (keyPressed.speedDown && bgSpeed >= 2) {\n            bgSpeed -= 1;\n            console.log(bgSpeed);\n        }\n        if (keyPressed.toggleMusic && allowMusicChange) {\n            if (!changingMusic) {\n                changingMusic = true;\n                changeAudioMusic();\n                console.log('Changing music');\n            }\n        }\n        if (keyPressed.mute && allowMusicChange) {\n            if (!changingMusic) {\n                changingMusic = true;\n                toggleMute();\n                console.log('Mute');\n            }\n        }\n        if (keyPressed.buggerMode) {\n            if (!buggerMode) {\n                buggerMode = true;\n                bossMode = false;\n                boss = null;\n                createBuggers();\n            }\n        }\n        if (keyPressed.bossMode) {\n            if (!bossMode) {\n                bossMode = true;\n                buggerMode = false;\n                destroyBuggers();\n                boss = new Boss();\n            }\n        }\n        if (keyPressed.clearEnemies) {\n            if (bossMode) {\n                bossMode = false;\n                boss = null;\n            }\n            if (buggerMode) {\n                buggerMode = false;\n                destroyBuggers();\n            }\n        }\n    }\n\n    /**\n     * CrossBrowser implementation for a Event Listener\n     * @param {[type]} element\n     * @param {[type]} type\n     * @param {[type]} expression\n     * @param {[type]} bubbling\n     */\n    function addListener(element, type, expression, bubbling) {\n        bubbling = bubbling || false;\n\n        if (window.addEventListener) { // Standard\n            element.addEventListener(type, expression, bubbling);\n        } else if (window.attachEvent) { // IE\n            element.attachEvent('on' + type, expression);\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Handle keyDown\n     * @param  {[type]} e\n     * @return {[type]}\n     */\n    function keyDown(e) {\n        var key = (window.event ? e.keyCode : e.which);\n        for (var inkey in keyMap) {\n            if (key === keyMap[inkey]) {\n                e.preventDefault();\n                keyPressed[inkey] = true;\n            }\n        }\n    }\n\n    /**\n     * Handle keyUp\n     * @param  {[type]} e\n     * @return {[type]}\n     */\n    function keyUp(e) {\n        var key = (window.event ? e.keyCode : e.which);\n        if (key === 84 || key === 77) {\n            changingMusic = false;\n        }\n        for (var inkey in keyMap) {\n            if (key === keyMap[inkey]) {\n                e.preventDefault();\n                keyPressed[inkey] = false;\n            }\n        }\n    }\n\n    /**\n     * Draw the buffer into the context\n     * @return {[type]}\n     */\n    function draw() {\n        ctx.drawImage(buffer, 0, 0);\n    }\n\n    /**\n     * Create the bomb effect\n     * @return {[type]}\n     */\n    function bomb() {\n        if (player.bombing) {\n            return;\n        }\n\n        player.bombing = true;\n\n        if (allowMusicChange) {\n            playFx(musicList.length + FX.bomb);\n        }\n\n        // BOMB\n        particleManager.createExplosion(0, 0, 130, 15, 70, 3, 0);\n        particleManager.createExplosion(canvas.width, 0, 130, 15, 70, 3, 0);\n        particleManager.createExplosion(0, background.height, 130, 15, 70, 3, 0);\n        particleManager.createExplosion(canvas.width, background.height, 130, 15, 70, 3, 0);\n        particleManager.createExplosion(canvas.width / 2, background.height / 2, 100, 10, 70, 3, 0, function() {\n            setTimeout(function() { player.bombing = false; }, 1500);\n        });\n\n        destroyBuggers();\n    }\n\n    /**\n     * Update the main game scene\n     * @return {[type]}\n     */\n    function update() {\n        scrollBackground([{\n            source: [background, background2, background3, background4, background4Mirror, background3Mirror, background2Mirror, backgroundMirror],\n            speed: 0.5,\n            orientation: 'horizontal',\n            moveTo: 'left'\n        }, {\n            source: [foreground, foreground2, foreground3, foreground4, foreground, foreground2, foreground3, foreground4],\n            speed: 3,\n            orientation: 'horizontal',\n            moveTo: 'left'\n        }, {\n            source: [starfield, starfield2, starfield3, starfield4, starfield5, starfield6],\n            speed: 7,\n            orientation: 'horizontal',\n            moveTo: 'left'\n        }]);\n\n        renderImage(player, bufferctx, player.posX, player.posY, player.rotate);\n\n        if (bossMode) {\n            bufferctx.drawImage(boss, boss.posX, boss.posY);\n        }\n\n        // Check for player shoots\n        player.checkForFire();\n\n        // Checks collisions of bullets, updates positions and draws the images\n        if (shots.length > 0) {\n            shots.forEach(function(shot, index) {\n                shot.id = index;\n                if (!bossMode || !checkCollisionsShot(shot)) {\n                    shot.posX += Math.cos(shot.direction) * shot.speed;\n                    shot.posY += Math.sin(shot.direction) * shot.speed;\n\n                    // Remove if offcanvas\n                    if (shot.posX < 0 || shot.posY < 0 || shot.posX > canvas.width || shot.posY > canvas.height) {\n                        shot.del(parseInt(shot.id, 10));\n                    }\n\n                    bufferctx.drawImage(shot, shot.posX, shot.posY);\n                }\n            });\n        }\n\n        // Checks collisions of buggers, updates positions and draws the images\n        if (buggerMode && buggers.length > 0) {\n            buggers.forEach(function(bugger, index) {\n                bugger.id = index;\n                //colisiones\n                if (!checkCollisionsBugger(bugger)) {\n                    bugger.update();\n                    if (bugger.posX < 0 || bugger.posX > canvas.width) {\n                        bugger.del(parseInt(bugger.id, 10));\n                    }\n                    bufferctx.drawImage(bugger, bugger.posX, bugger.posY);\n                }\n            });\n        }\n\n        // Create more buggers when they are destroyed\n        if (buggerMode && player.bombing === false) {\n            createBuggers();\n        }\n        playerAction();\n\n        particleManager.draw();\n\n        bufferctx.font = 'italic 25px arial';\n\n        if (bossMode) {\n            bufferctx.fillStyle = '#f00';\n            bufferctx.fillText(boss.life, boss.posX - 23 + boss.width / 2, boss.posY - 20);\n        }\n\n        bufferctx.fillStyle = '#fff';\n        bufferctx.fillText('Score: ' + score, 50, 50);\n\n        if (!allowMusicChange) {\n            bufferctx.fillText('Music still loading...', 50, 100);\n        }\n\n        printHelp();\n\n    }\n\n    /**\n     * Makes an explosion\n     * @param  {[type]} x\n     * @param  {[type]} y\n     * @return {[type]}\n     */\n    function makeExplosion(x, y) {\n        // Parametros del particleManager: posX, posY, size, area, life, speed, gravity\n        particleManager.createExplosion(x, y, 25, 4, 70, 3, 0.1);\n    }\n\n    /**\n     * Manages the particles for the explosions\n     * @param {[type]} n\n     */\n    function ParticleManager(n) {\n        var t = [],\n            i = n;\n        this.draw = function() {\n            for (var r = [], n = t.length - 1; n >= 0; n--) {\n                t[n].moves++;\n                t[n].x += t[n].xunits;\n                t[n].y += t[n].yunits + t[n].gravity * t[n].moves;\n                if (t[n].moves < t[n].life) {\n                    r.push(t[n]);\n                    i.globalAlpha = 5 / t[n].moves;\n                    i.drawImage(fireParticle, Math.floor(t[n].x), Math.floor(t[n].y), t[n].width, t[n].height);\n                    i.globalAlpha = 1;\n                }\n            }\n            t = r;\n        };\n        this.createExplosion = function(n, i, r, u, f, e, o, fn) {\n            var s, h;\n            for (n = n - r * 0.5, i = i - r * 0.5, e = r * e * 0.01, s = 1; s < u; s++) {\n                for (h = 0; h < 10 * s; h++) {\n                    t.push(particle(n, i, r, r, s * e, o, f));\n                }\n            }\n            if (fn) {\n                fn();\n            }\n        };\n    }\n\n    /**\n     * Particle object\n     * @param  {[type]} n\n     * @param  {[type]} t\n     * @param  {[type]} i\n     * @param  {[type]} r\n     * @param  {[type]} u\n     * @param  {[type]} f\n     * @param  {[type]} e\n     * @return {[type]}\n     */\n    function particle(n, t, i, r, u, f, e) {\n        var s = Math.floor(Math.random() * 360),\n            o = s * Math.PI / 180;\n        return {\n            x: n,\n            y: t,\n            width: i,\n            height: r,\n            speed: u,\n            life: e,\n            gravity: f,\n            xunits: Math.cos(o) * u,\n            yunits: Math.sin(o) * u,\n            moves: 0\n        };\n    }\n\n    /**\n     * Method to create buggers\n     * @return {[type]}\n     */\n    function createBuggers() {\n        var b = null;\n        for (var i = 0, n = buggersCount - buggers.length; i < n; i++) {\n            b = new Bugger();\n            b.add();\n        }\n    }\n\n    /**\n     * Method to destroy buggers\n     * @return {[type]}\n     */\n    function destroyBuggers() {\n        buggers.forEach(function(bugger, index) {\n            bugger = null;\n        });\n        buggers.length = 0;\n    }\n\n    /**\n     * Prints some help on screen\n     * @return {[type]}\n     */\n    function printHelp() {\n        bufferctx.font = 'italic 15px arial';\n\n        bufferctx.fillText('[Arrows] -> Move', 10, canvas.height - 70);\n        bufferctx.fillText('[1] -> Buggers Mode', 10, canvas.height - 50);\n        bufferctx.fillText('[2] -> Boss Mode', 10, canvas.height - 30);\n        bufferctx.fillText('[X] -> Shoot', 10, canvas.height - 10);\n\n        bufferctx.fillText('[C] -> Bombs', 150, canvas.height - 70);\n        bufferctx.fillText('[Z] -> Focus', 150, canvas.height - 50);\n        bufferctx.fillText('[A] -> Rotate left', 150, canvas.height - 30);\n        bufferctx.fillText('[D] -> Rotate right', 150, canvas.height - 10);\n\n        bufferctx.fillText('[W] -> Fire more spread', 280, canvas.height - 70);\n        bufferctx.fillText('[I] -> Increase bullets', 280, canvas.height - 50);\n        bufferctx.fillText('[O] -> Decrease bullets', 280, canvas.height - 30);\n        bufferctx.fillText('[T] -> Change music', 280, canvas.height - 10);\n\n        bufferctx.fillText('[M] -> Mute', 450, canvas.height - 70);\n        bufferctx.fillText('[Av Pag] -> Speed up', 450, canvas.height - 50);\n        bufferctx.fillText('[Re Pag] -> Speed down', 450, canvas.height - 30);\n        bufferctx.fillText('[0] -> Clear enemies', 450, canvas.height - 10);\n    }\n\n    // Public Methods\n    return {\n        init: init\n    };\n\n})();\n\ndefine(\"main\", function(){});\n","\n/**\n * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function(undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @return {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split('/'),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === '.') {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n\n                name = baseParts.concat(name.split('/'));\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === '.') {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === '..') {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join('/');\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join('/');\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function() {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function(name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function(value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function(name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function() {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function(name) {\n            return makeRequire(name);\n        },\n        exports: function(name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function(name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function(name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (typeof callback === 'function') {\n\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === 'require') {\n                    args[i] = handlers.require(name);\n                } else if (depName === 'exports') {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === 'module') {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback.apply(defined[name], args);\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function(deps, callback, relName, forceSync, alt) {\n        if (typeof deps === 'string') {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function() {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function() {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function(cfg) {\n        config = cfg;\n        if (config.deps) {\n            req(config.deps, config.callback);\n        }\n        return req;\n    };\n\n    define = function(name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond.js\", function(){});\n"]}